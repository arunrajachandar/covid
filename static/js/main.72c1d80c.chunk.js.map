{"version":3,"sources":["serviceWorker.js","components/Card/Card.js","components/Map/Map.js","components/Table/Table.js","App.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","Card","tableData","totCalc","className","delay","end","Map","chartData","height","padding","chartType","data","mapsApiKey","rootProps","options","colorAxis","colors","datalessRegionColor","defaultColor","todayCases","cell","row","confirmed","style","color","fontSize","styValues","rowIndex","colIndex","backgroundColor","headerStyle","fontWeight","smColumns","dataField","text","sort","formatter","lColumns","defaultSorted","order","Table","smTableData","width","bootstrap4","keyField","columns","headers","isoCountries","App","returnTabData","countryName","recovered","deaths","getCountryName","countryCode","hasOwnProperty","addTot","val","key","map","e","reduce","a","fetchAPI","fetch","response","json","i","length","country","push","countryInfo","iso2","cases","setState","dataLoadingStatus","state","this","Navbar","bg","variant","Brand","href","alt","src","Logo","Spinner","animation","role","handleWidth","EasingType","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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GAAO,WACP,GAAO,UACP,GAAO,QACP,GAAO,6BACP,GAAO,eACP,GAAO,aACP,GAAO,gBACP,GAAO,UACP,GAAO,OACP,GAAO,SACP,GAAO,iBACP,GAAO,UACP,GAAO,WACP,GAAO,WACP,GAAO,qBACP,GAAO,UACP,GAAO,QACP,GAAO,cACP,GAAO,oBACP,GAAO,UACP,GAAO,UACP,GAAO,WACP,GAAO,8BACP,GAAO,gBACP,GAAO,OACP,GAAO,UACP,GAAO,SACP,GAAO,gBACP,GAAO,mBACP,GAAO,8BACP,GAAO,QACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,SACP,GAAO,YACP,GAAO,UACP,GAAO,aACP,GAAO,OACP,GAAO,YACP,GAAO,WACP,GAAO,SACP,GAAO,gBACP,GAAO,SACP,GAAO,QACP,GAAO,kCACP,GAAO,gCACP,GAAO,WACP,GAAO,YACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,4BACP,GAAO,OACP,GAAO,UACP,GAAO,cACP,GAAO,SACP,GAAO,QACP,GAAO,UACP,GAAO,QACP,GAAO,SACP,GAAO,SACP,GAAO,aACP,GAAO,QACP,GAAO,WACP,GAAO,QACP,GAAO,SACP,GAAO,aACP,GAAO,mCACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,UACP,GAAO,yBACP,GAAO,gBACP,GAAO,YACP,GAAO,aACP,GAAO,QACP,GAAO,YACP,GAAO,aACP,GAAO,SACP,GAAO,WACP,GAAO,WACP,GAAO,OACP,GAAO,QACP,GAAO,mBACP,GAAO,aACP,GAAO,aACP,GAAO,YACP,GAAO,UACP,GAAO,SACP,GAAO,kCACP,GAAO,UACP,GAAO,SACP,GAAO,WACP,GAAO,aACP,GAAO,aACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,QACP,GAAO,cACP,GAAO,uBACP,GAAO,gBACP,GAAO,cACP,GAAO,YACP,GAAO,QACP,GAAO,UACP,GAAO,OACP,GAAO,iBACP,GAAO,2BACP,GAAO,SACP,GAAO,OA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","file":"static/js/main.72c1d80c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nimport CountUp from 'react-countup';\r\n\r\nfunction Card({tableData, totCalc}){\r\n    return(\r\n        <div className=\"card-group p-2 fadeIn \">\r\n        <div className=\"card bg-danger\">\r\n      <div className=\"card-body text-center text-white font-weight-bold fadeIn1\">\r\n      Deaths\r\n        <p className=\"card-text text-white fadeIn2\">\r\n          <CountUp delay={2} end={totCalc(tableData,'deaths')} /></p>\r\n      </div>\r\n    </div>\r\n  \r\n    <div className=\"card bg-warning\">\r\n      <div className=\"card-body text-center text-white font-weight-bold fadeIn1\">\r\n        Confirmed\r\n        \r\n\r\n        <p className=\"card-text text-white fadeIn2\">\r\n        <CountUp delay={2} end={totCalc(tableData,'confirmed')}/></p>\r\n      </div>\r\n    </div>\r\n    <div className=\"card bg-success\">\r\n      <div className=\"card-body text-center text-white font-weight-bold fadeIn1\">\r\n      Recovered\r\n  \r\n        <p className=\"card-text text-white fadeIn2\">\r\n        <CountUp delay={2} end={totCalc(tableData,'recovered')}/></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\n function Map ({chartData}){\r\n    return (\r\n        <Chart\r\n         height={'300px'}\r\n         padding={'40px'}\r\n        chartType=\"GeoChart\"\r\n        data={chartData}\r\n        // Note: you will need to get a mapsApiKey for your project.\r\n        // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\r\n        mapsApiKey=\"AIzaSyDj3reNpBglRu9Tuqri7MpJ4zSKkB_spSU\"\r\n        rootProps={{ 'data-testid': '1' }}\r\n        options={{\r\n          colorAxis: { colors: ['#f2908d','#e31b23'] },\r\n          datalessRegionColor: '#fff',\r\n          defaultColor: '#f5f5f5',\r\n        } \r\n      }\r\n      />\r\n    );\r\n}\r\nexport default Map;","import React from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\n\r\nconst todayCases = (cell, row) =>{\r\n  if (row.todayCases) {\r\n    return (\r\n      <span>\r\n         \r\n      {row.confirmed}\r\n    <strong style={ { color: 'red', fontSize: '0.7rem' } }>  +{row.todayCases}</strong>\r\n      </span>\r\n    );\r\n  }\r\n  return (\r\n    <span>\r\n       \r\n    {row.confirmed}\r\n    </span>);\r\n\r\n}\r\n\r\n\r\nconst styValues = (cell, row, rowIndex, colIndex) => {\r\n  if (rowIndex % 2 === 0) {\r\n    return {\r\n      backgroundColor: '#fff',\r\n      fontSize: '1rem',\r\n\r\n    };\r\n  }\r\n  return {\r\n    backgroundColor: '#D3D3D3',\r\n    fontSize: '1rem'\r\n  };\r\n}\r\n\r\nconst headerStyle={\r\n  fontSize: '1rem',\r\n  fontWeight: 'bold',\r\n  backgroundColor: '#D3D3D3'\r\n}\r\n\r\nconst smColumns = [{\r\n  dataField: 'countryName',\r\n  text: 'CTY',\r\n  sort: true,\r\n  style: styValues,\r\n  headerStyle: headerStyle\r\n}\r\n, {\r\n  dataField: 'confirmed',\r\n  text: 'C',\r\n  sort: true,\r\n  formatter: todayCases,\r\n  style:styValues,\r\n  headerStyle: headerStyle\r\n\r\n}, {\r\n  dataField: 'recovered',\r\n  text: 'R',\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n  sort: true\r\n\r\n},\r\n{\r\n  dataField: 'deaths',\r\n  text: 'D',\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n  sort: true\r\n\r\n}\r\n];\r\n\r\nconst lColumns = [{\r\n  dataField: 'countryName',\r\n  text: 'Country Name',\r\n  sort: true,\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n\r\n}, {\r\n  dataField: 'confirmed',\r\n  text: 'Confirmed',\r\n  formatter: todayCases,\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n  sort:true\r\n\r\n}, {\r\n  dataField: 'recovered',\r\n  text: 'Recovered',\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n  sort: true\r\n\r\n},\r\n{\r\n  dataField: 'deaths',\r\n  text: 'Deaths',\r\n  style:styValues,\r\n  headerStyle: headerStyle,\r\n  sort: true\r\n\r\n}\r\n];\r\nconst defaultSorted = [{\r\n  dataField: 'name',\r\n  order: 'desc'\r\n}];\r\n\r\n\r\nconst Table = ({tableData, smTableData, width})=>{\r\n  return (    <div className='table'>\r\n\r\n {width<500?<BootstrapTable   bootstrap4\r\n    keyField='id' columns={smColumns} data={smTableData}  headers={true} defaultSorted={defaultSorted} />:\r\n    <BootstrapTable   bootstrap4\r\n    keyField='id' columns={lColumns} data={tableData}  headers={true} defaultSorted={defaultSorted} />\r\n }\r\n</div>\r\n    \r\n    );\r\n}\r\n\r\n\r\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Card from './components/Card/Card';\nimport Map from './components/Map/Map';\n// import Country from './components/Country/Country';\nimport Tables from './components/Table/Table';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Select from 'react-select';\nimport Logo from './logo.svg';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\n\n\nconst isoCountries = {\n  'AF' : 'Afghanistan',\n  'AX' : 'Aland Islands',\n  'AL' : 'Albania',\n  'DZ' : 'Algeria',\n  'AS' : 'American Samoa',\n  'AD' : 'Andorra',\n  'AO' : 'Angola',\n  'AI' : 'Anguilla',\n  'AQ' : 'Antarctica',\n  'AG' : 'Antigua And Barbuda',\n  'AR' : 'Argentina',\n  'AM' : 'Armenia',\n  'AW' : 'Aruba',\n  'AU' : 'Australia',\n  'AT' : 'Austria',\n  'AZ' : 'Azerbaijan',\n  'BS' : 'Bahamas',\n  'BH' : 'Bahrain',\n  'BD' : 'Bangladesh',\n  'BB' : 'Barbados',\n  'BY' : 'Belarus',\n  'BE' : 'Belgium',\n  'BZ' : 'Belize',\n  'BJ' : 'Benin',\n  'BM' : 'Bermuda',\n  'BT' : 'Bhutan',\n  'BO' : 'Bolivia',\n  'BA' : 'Bosnia And Herzegovina',\n  'BW' : 'Botswana',\n  'BV' : 'Bouvet Island',\n  'BR' : 'Brazil',\n  'IO' : 'British Indian Ocean Territory',\n  'BN' : 'Brunei Darussalam',\n  'BG' : 'Bulgaria',\n  'BF' : 'Burkina Faso',\n  'BI' : 'Burundi',\n  'KH' : 'Cambodia',\n  'CM' : 'Cameroon',\n  'CA' : 'Canada',\n  'CV' : 'Cape Verde',\n  'KY' : 'Cayman Islands',\n  'CF' : 'Central African Republic',\n  'TD' : 'Chad',\n  'CL' : 'Chile',\n  'CN' : 'China',\n  'CX' : 'Christmas Island',\n  'CC' : 'Cocos (Keeling) Islands',\n  'CO' : 'Colombia',\n  'KM' : 'Comoros',\n  'CG' : 'Congo',\n  'CD' : 'Congo, Democratic Republic',\n  'CK' : 'Cook Islands',\n  'CR' : 'Costa Rica',\n  'CI' : 'Cote D\\'Ivoire',\n  'HR' : 'Croatia',\n  'CU' : 'Cuba',\n  'CY' : 'Cyprus',\n  'CZ' : 'Czech Republic',\n  'DK' : 'Denmark',\n  'DJ' : 'Djibouti',\n  'DM' : 'Dominica',\n  'DO' : 'Dominican Republic',\n  'EC' : 'Ecuador',\n  'EG' : 'Egypt',\n  'SV' : 'El Salvador',\n  'GQ' : 'Equatorial Guinea',\n  'ER' : 'Eritrea',\n  'EE' : 'Estonia',\n  'ET' : 'Ethiopia',\n  'FK' : 'Falkland Islands (Malvinas)',\n  'FO' : 'Faroe Islands',\n  'FJ' : 'Fiji',\n  'FI' : 'Finland',\n  'FR' : 'France',\n  'GF' : 'French Guiana',\n  'PF' : 'French Polynesia',\n  'TF' : 'French Southern Territories',\n  'GA' : 'Gabon',\n  'GM' : 'Gambia',\n  'GE' : 'Georgia',\n  'DE' : 'Germany',\n  'GH' : 'Ghana',\n  'GI' : 'Gibraltar',\n  'GR' : 'Greece',\n  'GL' : 'Greenland',\n  'GD' : 'Grenada',\n  'GP' : 'Guadeloupe',\n  'GU' : 'Guam',\n  'GT' : 'Guatemala',\n  'GG' : 'Guernsey',\n  'GN' : 'Guinea',\n  'GW' : 'Guinea-Bissau',\n  'GY' : 'Guyana',\n  'HT' : 'Haiti',\n  'HM' : 'Heard Island & Mcdonald Islands',\n  'VA' : 'Holy See (Vatican City State)',\n  'HN' : 'Honduras',\n  'HK' : 'Hong Kong',\n  'HU' : 'Hungary',\n  'IS' : 'Iceland',\n  'IN' : 'India',\n  'ID' : 'Indonesia',\n  'IR' : 'Iran, Islamic Republic Of',\n  'IQ' : 'Iraq',\n  'IE' : 'Ireland',\n  'IM' : 'Isle Of Man',\n  'IL' : 'Israel',\n  'IT' : 'Italy',\n  'JM' : 'Jamaica',\n  'JP' : 'Japan',\n  'JE' : 'Jersey',\n  'JO' : 'Jordan',\n  'KZ' : 'Kazakhstan',\n  'KE' : 'Kenya',\n  'KI' : 'Kiribati',\n  'KR' : 'Korea',\n  'KW' : 'Kuwait',\n  'KG' : 'Kyrgyzstan',\n  'LA' : 'Lao People\\'s Democratic Republic',\n  'LV' : 'Latvia',\n  'LB' : 'Lebanon',\n  'LS' : 'Lesotho',\n  'LR' : 'Liberia',\n  'LY' : 'Libyan Arab Jamahiriya',\n  'LI' : 'Liechtenstein',\n  'LT' : 'Lithuania',\n  'LU' : 'Luxembourg',\n  'MO' : 'Macao',\n  'MK' : 'Macedonia',\n  'MG' : 'Madagascar',\n  'MW' : 'Malawi',\n  'MY' : 'Malaysia',\n  'MV' : 'Maldives',\n  'ML' : 'Mali',\n  'MT' : 'Malta',\n  'MH' : 'Marshall Islands',\n  'MQ' : 'Martinique',\n  'MR' : 'Mauritania',\n  'MU' : 'Mauritius',\n  'YT' : 'Mayotte',\n  'MX' : 'Mexico',\n  'FM' : 'Micronesia, Federated States Of',\n  'MD' : 'Moldova',\n  'MC' : 'Monaco',\n  'MN' : 'Mongolia',\n  'ME' : 'Montenegro',\n  'MS' : 'Montserrat',\n  'MA' : 'Morocco',\n  'MZ' : 'Mozambique',\n  'MM' : 'Myanmar',\n  'NA' : 'Namibia',\n  'NR' : 'Nauru',\n  'NP' : 'Nepal',\n  'NL' : 'Netherlands',\n  'AN' : 'Netherlands Antilles',\n  'NC' : 'New Caledonia',\n  'NZ' : 'New Zealand',\n  'NI' : 'Nicaragua',\n  'NE' : 'Niger',\n  'NG' : 'Nigeria',\n  'NU' : 'Niue',\n  'NF' : 'Norfolk Island',\n  'MP' : 'Northern Mariana Islands',\n  'NO' : 'Norway',\n  'OM' : 'Oman',\n  'PK' : 'Pakistan',\n  'PW' : 'Palau',\n  'PS' : 'Palestinian Territory, Occupied',\n  'PA' : 'Panama',\n  'PG' : 'Papua New Guinea',\n  'PY' : 'Paraguay',\n  'PE' : 'Peru',\n  'PH' : 'Philippines',\n  'PN' : 'Pitcairn',\n  'PL' : 'Poland',\n  'PT' : 'Portugal',\n  'PR' : 'Puerto Rico',\n  'QA' : 'Qatar',\n  'RE' : 'Reunion',\n  'RO' : 'Romania',\n  'RU' : 'Russia',\n  'RW' : 'Rwanda',\n  'BL' : 'Saint Barthelemy',\n  'SH' : 'Saint Helena',\n  'KN' : 'Saint Kitts And Nevis',\n  'LC' : 'Saint Lucia',\n  'MF' : 'Saint Martin',\n  'PM' : 'Saint Pierre And Miquelon',\n  'VC' : 'Saint Vincent And Grenadines',\n  'WS' : 'Samoa',\n  'SM' : 'San Marino',\n  'ST' : 'Sao Tome And Principe',\n  'SA' : 'Saudi Arabia',\n  'SN' : 'Senegal',\n  'RS' : 'Serbia',\n  'SC' : 'Seychelles',\n  'SL' : 'Sierra Leone',\n  'SG' : 'Singapore',\n  'SK' : 'Slovakia',\n  'SI' : 'Slovenia',\n  'SB' : 'Solomon Islands',\n  'SO' : 'Somalia',\n  'ZA' : 'South Africa',\n  'GS' : 'South Georgia And Sandwich Isl.',\n  'ES' : 'Spain',\n  'LK' : 'Sri Lanka',\n  'SD' : 'Sudan',\n  'SR' : 'Suriname',\n  'SJ' : 'Svalbard And Jan Mayen',\n  'SZ' : 'Swaziland',\n  'SE' : 'Sweden',\n  'CH' : 'Switzerland',\n  'SY' : 'Syrian Arab Republic',\n  'TW' : 'Taiwan',\n  'TJ' : 'Tajikistan',\n  'TZ' : 'Tanzania',\n  'TH' : 'Thailand',\n  'TL' : 'Timor-Leste',\n  'TG' : 'Togo',\n  'TK' : 'Tokelau',\n  'TO' : 'Tonga',\n  'TT' : 'Trinidad And Tobago',\n  'TN' : 'Tunisia',\n  'TR' : 'Turkey',\n  'TM' : 'Turkmenistan',\n  'TC' : 'Turks And Caicos Islands',\n  'TV' : 'Tuvalu',\n  'UG' : 'Uganda',\n  'UA' : 'Ukraine',\n  'AE' : 'United Arab Emirates',\n  'GB' : 'United Kingdom',\n  'US' : 'United States',\n  'UM' : 'United States Outlying Islands',\n  'UY' : 'Uruguay',\n  'UZ' : 'Uzbekistan',\n  'VU' : 'Vanuatu',\n  'VE' : 'Venezuela',\n  'VN' : 'Viet Nam',\n  'VG' : 'Virgin Islands, British',\n  'VI' : 'Virgin Islands, U.S.',\n  'WF' : 'Wallis And Futuna',\n  'EH' : 'Western Sahara',\n  'YE' : 'Yemen',\n  'ZM' : 'Zambia',\n  'ZW' : 'Zimbabwe'\n};\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state={ dataLoadingStatus: 'loading', chartData: [],tableData: [],smTableData: []//,options:[], currVal:'',toggle:'home'\n  };\n  \n  }\n\n    reset (){\n      this.setState({dataLoadingStatus: 'loading', chartData: [],tableData: [],smTableData:[]//,options:[],currVal:'', toggle:'home'\n    });\n    }\n    returnTabData = (countryName,confirmed,recovered,deaths,todayCases) =>{\n      return {countryName:countryName,confirmed:confirmed,recovered:recovered,deaths:deaths,todayCases:todayCases};\n    };\n     getCountryName =(countryCode) =>{\n      if (isoCountries.hasOwnProperty(countryCode)) {\n          return isoCountries[countryCode];\n      } else {\n          return countryCode;\n      }\n    }\n    addTot = (val, key) => {\n      let returnVal = val.map(e => e[key]).reduce((a, e) => a + e, 0);\n      return returnVal;\n    }\n     fetchAPI = async () =>{\n      const response = await fetch('https://corona.lmao.ninja/countries?sort=country')\n      const json = await response.json()\n      const tableData = [];\n      const smTableData=[];\n      //const options =[];\n      const chartData = [['Country Name', 'Confirmed Cases','Today Cases']]\n      for (let i = 0; i < json.length; i += 1) {\n        if(json[i].country!=='World'){\n        chartData.push([this.getCountryName(json[i].countryInfo.iso2)?this.getCountryName(json[i].countryInfo.iso2):json[i].country,json[i].cases,json[i].todayCases]);\n        tableData.push(this.returnTabData(\n          json[i].country,\n          json[i].cases,\n          json[i].recovered,\n          json[i].deaths,\n          json[i].todayCases));\n          \n          if(json[i].countryInfo.iso2){\n          smTableData.push(this.returnTabData(\n           json[i].countryInfo.iso2,\n            json[i].cases,\n            json[i].recovered,\n            json[i].deaths,\n            json[i].todayCases));\n           // options.push(json[i].country);\n          }\n        }\n      }\n      this.setState({\n        dataLoadingStatus: 'ready',\n        chartData: chartData,\n        tableData: tableData,\n        smTableData:smTableData,\n        // ,\n        // options: options\n      })\n  }\n  // handleChange = (values) => {\n  //   this.setState({toggle:'',\n  //   currVal: values})\n  // }\n  componentDidMount(){\n    this.fetchAPI();\n  }\n  // handleClick = (value) =>{\n  //   this.setState({toggle: value})\n  // }\n\n  render(){\n    const {dataLoadingStatus, chartData, tableData,smTableData//, options, toggle\n    }= this.state;\n  return (\n    <>\n      \n      <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">\n      <img\n        alt=\"COVID-19\"\n        src={Logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n      />{' '}\n      COVID-19\n    </Navbar.Brand>\n  </Navbar>\n        {dataLoadingStatus !=='ready'?\n       <Spinner className=\"spinner\" animation=\"border\" role=\"status\" >\n       <span className=\"sr-only\">Loading...</span>\n     </Spinner>\n  :\n  <ReactResizeDetector handleWidth>\n  {({ width }) => \n  // toggle ==='home'?\n  \n\n  <>\n  \n  {/* <Select options={options} onChange={this.handleChange} color='#fff'/> */}\n\n    <div className=\"App fadeIn\">\n      <div className=\"App-header\">\n        <Card tableData = {tableData} totCalc ={this.addTot}/>\n<div className=\"container\">\n  <div className=\"row\">\n    <div className=\"col-md-12 col-xl-6 fadeIn2 \">\n    <div className='p-2'>\n      <Map chartData={chartData}/>\n      </div>\n\n    </div>\n    <div className=\"col-md-12 col-xl-6 fadeIn2\">\n    <div className='p-2'>\n    <ScrollUpButton\n          EasingType=\"easeInOutBounce\"\n        />\n      <Tables tableData={tableData} smTableData={smTableData} width={width}/>\n      </div>\n    </div>\n  </div>\n  </div>\n   \n        \n        </div>\n    \n  </div>\n     </>\n    // :\n    // <>\n    // <Country toggleFunc={this.handleClick}/>\n    // </>\n      }\n  \n    </ReactResizeDetector>\n  }\n</>\n  \n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n// import Component from 'react-component-component';\n// import Map from './components/Map/Map';\n// import CustomizedTables from './components/Table/Table';\n import App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\n\n\nReactDOM.render( <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ef8b87dd.svg\";"],"sourceRoot":""}